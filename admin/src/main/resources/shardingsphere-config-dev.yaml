dataSources: # 数据源集合
  ds_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3306/ohshortlink?useUnicode=true&characterEncoding=UTF-8&rewriteBatchedStatements=true&allowMultiQueries=true&serverTimezone=Asia/Shanghai
    username: root
    password: 88888888

rules: # 规则
  - !SHARDING # 分片规则
    tables:
      t_user:
        actualDataNodes: ds_0.t_user_${0..15} # 真实数据节点，比如数据库源以及数据库在数据库中真实存在的（虚拟表和真实表之间的映射）
        tableStrategy: # 分表策略
          standard: # 用于单分片键的标准分片场景（分库分表也有多分片键）
            shardingColumn: username # 分片键
            shardingAlgorithmName: user_table_hash_mod # 分片算法，对应 rules[0].shardingAlgorithms
    shardingAlgorithms: # 分片算法
      user_table_hash_mod: # 数据表分片算法
        type: HASH_MOD # 根据分片键 Hash 分片（哈希取模）
        props:
          sharding-count: 16 # 分片数量
  - !ENCRYPT # 数据加密存储规则
    tables: # 需要加密的表集合
      t_user: # 用户表
        columns: # 用户表中哪些字段需要进行加密
          phone: # 手机号字段，逻辑字段，不一定是在数据库中真实存在
            cipherColumn: phone # 手机号字段存储的密文字段，这个是数据库中真实存在的字段
            encryptorName: common_encryptor # 身份证字段加密算法
          mail: # 邮箱字段
            cipherColumn: mail
            encryptorName: common_encryptor
        queryWithCipherColumn: true # 是否按照密文字段查询
    encryptors: # 加密算法
      common_encryptor: # 自定义加密算法名称
        type: AES # 加密算法类型
        props:
          aes-key-value: d6oadClrrb9A3GWo # AES 加密密钥
props:
  sql-show: true # 展现逻辑 SQL & 真实 SQL